package Applic;

import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.Calendar;
import java.util.Iterator;
import java.util.List;

import Utils.Distance;
import Utils.Printer;
import Utils.YouTubeMedia;

import com.google.api.services.youtube.YouTube;
import com.google.api.services.youtube.model.Playlist;
import com.google.api.services.youtube.model.PlaylistSnippet;
import com.google.api.services.youtube.model.PlaylistStatus;
import com.google.gdata.client.youtube.YouTubeQuery;
import com.google.gdata.client.youtube.YouTubeService;
import com.google.gdata.data.Link;
import com.google.gdata.data.TextConstruct;
import com.google.gdata.data.youtube.PlaylistEntry;
import com.google.gdata.data.youtube.PlaylistFeed;
import com.google.gdata.data.youtube.PlaylistLinkEntry;
import com.google.gdata.data.youtube.PlaylistLinkFeed;
import com.google.gdata.data.youtube.VideoEntry;
import com.google.gdata.data.youtube.VideoFeed;
import com.google.gdata.util.AuthenticationException;
import com.google.gdata.util.ServiceException;
import com.google.common.primitives.



public class Appli {
	private YouTubeService service;
	private Distance d;
	private static YouTube youtube;
	
	private Appli() throws AuthenticationException{
		 service = new YouTubeService("179467727333.apps.googleusercontent.com", "AIzaSyDvAx-Sfz307fkgFSHoyP4f9RivYldVVRA");
		 service.setUserCredentials("keller.projet380@gmail.com", "projet380");
		 d = new Distance();
		
	}
	private YouTubeService getService()
	{
		return service; 
	}

	private String getSongId(VideoEntry video)
	{
		String idvideo = video.getId();
		String id = idvideo.substring(27, 38);
		return id;
	}
	private String getSongName(VideoEntry video)
	{
		return video.getTitle().getPlainText();
	}
	private void addSongToPlaylist(String songName,String playListName) throws IOException, ServiceException
	{
		PlaylistLinkEntry play = getPlaylist(playListName);
		String playlistUrl = play.getFeedUrl();
		PlaylistEntry playlistEntry = new PlaylistEntry(searchSong(songName));
		service.insert(new URL(playlistUrl), playlistEntry);
	}
	
	private VideoEntry searchSong(String name) throws IOException, ServiceException
	{
		int distance = 50 ; // On prend une distance de 50 pour être sur 
		VideoEntry video = null;
		YouTubeQuery query = new YouTubeQuery(new URL("http://gdata.youtube.com/feeds/api/videos"));
		query.setFullTextQuery(name);
		VideoFeed videoFeed = service.query(query, VideoFeed.class);
		for (int i=0;i<10;i++)
		{
			VideoEntry vid = videoFeed.getEntries().get(i);
			int distancetmp = d.computeLevenshteinDistance(name, getSongName(vid));
			if(distancetmp<distance)
			{
				distance = distancetmp;
				video = vid; 
			}
		}
		return video;
	}
	private PlaylistLinkEntry getPlaylist(String name) throws MalformedURLException, IOException, ServiceException
	{
		PlaylistLinkEntry playlist = null;
		String feedUrl = "http://gdata.youtube.com/feeds/api/users/default/playlists";
		PlaylistLinkFeed feed = service.getFeed(new URL(feedUrl), PlaylistLinkFeed.class);
		int i = 0;
		PlaylistLinkEntry tmp =null;
		while(playlist==null)
		{
			if(i==feed.getEntries().size())
				break; 
			tmp = feed.getEntries().get(i);
			if(getPlaylistName(tmp).equals(name))
				playlist=tmp;
			i++;
		}
		return playlist;
	}
	private void createPlaylist(String name) throws MalformedURLException, IOException, ServiceException
	{
		PlaylistSnippet playlistSnippet = new PlaylistSnippet();
		playlistSnippet.setTitle("Test Playlist " + Calendar.getInstance().getTime());
        playlistSnippet.setDescription("A private playlist created with the YouTube API v3");
        PlaylistStatus playlistStatus = new PlaylistStatus();
        playlistStatus.setPrivacyStatus("private");
        
        Playlist youTubePlaylist = new Playlist();
        youTubePlaylist.setSnippet(playlistSnippet);
        youTubePlaylist.setStatus(playlistStatus);
        YouTube.Playlists.Insert playlistInsertCommand =
                youtube.playlists().insert("snippet,status", youTubePlaylist);
       

	}
	private String getPlaylistName(PlaylistLinkEntry list)
	{
		return list.getTitle().getPlainText();
	}
	private String getPlaylistURL(PlaylistLinkEntry list)
	{
		System.out.println(list.getId());
		return list.getHtmlLink().toString();
	}
	
	public static void main(String[] args) throws IOException, ServiceException
	{
		Appli ap = new Appli();
		YouTubeService service = ap.getService();
		//PlaylistLinkEntry a = ap.getPlaylist("pppp");
		//System.out.println(a.getPlaylistId());
		ap.createPlaylist("test");
		//System.out.println(ap.getPlaylistURL(ap.getPlaylist("pppp")));
		//ap.addSongToPlaylist("titanium acoustic version", "test");
	
	}
}
